# See https://pre-commit.com for more information, specially https://pre-commit.com/#pre-commit-run for manual trigger
# Some example useful invocations:
#  pre-commit run                                 : this is what pre-commit runs by default when committing. This will run all hooks against currently staged files.
#  pre-commit run --all-files                     : run all the hooks against all the files. This is a useful invocation if you are using pre-commit in CI.
#  pre-commit run check-executables-have-shebangs : run the check-executables-have-shebangs hook against all staged files.
#  pre-commit install
#  pre-commit autoupdate

# Files or directory we want to excude from checking
exclude: |
  (?x)(
  ^rtos/ |
  ^build/ |
  ^cmake-build-debug/ |
  \.m |
  ^tools/
  )

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: mixed-line-ending
      - id: trailing-whitespace
        args: ["--fix=lf"]
        types_or: [python, c, c++, shell]
        exclude_types: [rst]
      - id: fix-byte-order-marker
      - id: check-xml
      - id: check-yaml

    # CPP hooks
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: "v14.0.6"
    hooks:
      - id: clang-format

  - repo: https://github.com/pocc/pre-commit-hooks
    rev: "v1.3.5"
    hooks:
      - id: cppcheck
        args: ["--suppressions-list=.cppcheck-suppress", "--inline-suppr"]

  # xml
  # - repo: https://github.com/lsst-ts/pre-commit-xmllint
  #   rev: v1.0.0
  #   hooks:
  #     - id: format-xmllint
  #       files: libraries/AP_DDS/dds_xrce_profile.xml

  # python
  # - repo: https://github.com/psf/black
  #   rev: 23.1.0
  #   hooks:
  #     - id: black
  #       files: libraries\/AP_DDS\/(wscript|.*\.py)$

  # - repo: https://github.com/doublify/pre-commit-clang-format.git
  #   rev: master
  #   hooks:
  #       - id: clang-format
